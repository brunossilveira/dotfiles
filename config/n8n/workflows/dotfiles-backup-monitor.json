{
  "name": "Dotfiles Backup Monitor",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * *"
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [250, 300]
    },
    {
      "parameters": {
        "command": "cd /Users/bruno/.dotfiles && git status --porcelain"
      },
      "id": "check-git-status",
      "name": "Check Git Status",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stdout }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "has-changes",
      "name": "Has Changes?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "command": "cd /Users/bruno/.dotfiles && git diff HEAD"
      },
      "id": "get-git-diff",
      "name": "Get Git Diff",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [850, 200]
    },
    {
      "parameters": {
        "command": "cd /Users/bruno/.dotfiles && git status --short"
      },
      "id": "get-file-list",
      "name": "Get File List",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1050, 200]
    },
    {
      "parameters": {
        "resource": "text",
        "operation": "message",
        "model": "gpt-4o-mini",
        "messages": {
          "values": [
            {
              "content": "=You are a helpful assistant that writes clear, concise git commit messages following conventional commit format.\n\nBased on the following git diff and file changes, generate a commit message with:\n1. A short subject line (max 72 chars) that summarizes the changes\n2. A blank line\n3. A detailed body explaining what changed and why (if needed)\n\nFiles changed:\n{{ $('Get File List').item.json.stdout }}\n\nDiff:\n{{ $('Get Git Diff').item.json.stdout }}\n\nRespond with ONLY the commit message, no other text."
            }
          ]
        },
        "options": {}
      },
      "id": "generate-commit-message",
      "name": "Generate Commit Message",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.5,
      "position": [1250, 200],
      "credentials": {
        "openAiApi": {
          "id": "openai-api",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "command": "cd /Users/bruno/.dotfiles && git add -A"
      },
      "id": "stage-changes",
      "name": "Stage All Changes",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1450, 200]
    },
    {
      "parameters": {
        "command": "=cd /Users/bruno/.dotfiles && git commit -m \"{{ $('Generate Commit Message').item.json.message.content }}\""
      },
      "id": "commit-changes",
      "name": "Commit Changes",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1650, 200]
    },
    {
      "parameters": {
        "command": "cd /Users/bruno/.dotfiles && git push origin master"
      },
      "id": "push-changes",
      "name": "Push to Remote",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1850, 200]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Check Git Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Git Status": {
      "main": [
        [
          {
            "node": "Has Changes?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Changes?": {
      "main": [
        [
          {
            "node": "Get Git Diff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Git Diff": {
      "main": [
        [
          {
            "node": "Get File List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File List": {
      "main": [
        [
          {
            "node": "Generate Commit Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Commit Message": {
      "main": [
        [
          {
            "node": "Stage All Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stage All Changes": {
      "main": [
        [
          {
            "node": "Commit Changes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commit Changes": {
      "main": [
        [
          {
            "node": "Push to Remote",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "dotfiles-backup-monitor",
  "meta": {
    "instanceId": "local"
  },
  "tags": []
}
